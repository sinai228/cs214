Script started on 2020-04-24 02:43:57-0400
]0;sp46@gold06: ~/214/projects/09/clojure[01;32msp46@gold06[00m:[01;34m~/214/projects/09/clojure[00m$ clojure -m clos jure
Execution error (FileNotFoundException) at clojure.main/main (main.java:40).
Could not locate clojure__init.class, clojure.clj or clojure.cljc on classpath.

Full report at:
/tmp/clojure-12427680095287071847.edn
]0;sp46@gold06: ~/214/projects/09/clojure[01;32msp46@gold06[00m:[01;34m~/214/projects/09/clojure[00m$ clojure -m max

list1:  (99 88 77 66 55)
list2:  (55 66 77 88 99)
list3:  (55 77 99 88 66)
empty:  ()

The max value in list1 is:  99
The max value in list2 is:  99
The max value in list3 is:  99

The max of an empty list is:  nil

The max value in list1 is:  99
The max value in list2 is:  99
The max value in list3 is:  99

The max of an empty list is:  nil

The index of 99 in list1 is:  0
The index of 99 in list2 is:  4
The index of 99 in list3 is:  2
The index of 99 in list4 is:  -1
]0;sp46@gold06: ~/214/projects/09/clojure[01;32msp46@gold06[00m:[01;34m~/214/projects/09/clojure[00m$ cat src/listOps.clj src/max.clj
;; listOps.clj is a Clojure "module" for list operations.
;;
;; Begun by: Prof. Adams, CS 214 at Calvin College.
;; Completed by: Sinai Park (sp46)
;; Date: April 17 2020
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; maxOf2() finds the maximum of two values.  
;; Receive: val1, val2, two values.  
;; PRE: val1 and val2 can be compared using >.
;; Return: the maximum of val1 and val2. 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn maxOf2 [val1 val2]
  (if (> val1 val2)      ; if val1 > val2
    val1                 ;   return val1
    val2                 ; else return val2
  )
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; listMax() finds the maximum value in a list.
;; Receive: aList, a list of values.    
;; PRE: aList is a list 
;;      values in aList can be compared using >.
;; Return: the maximum value in aList.         
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn listMax [aList]
  
  (if (list? aList)
    (if (empty? aList) nil
    (if (= 1 (count aList))
        (first aList)
        (maxOf2 (first aList) (listMax (rest aList)))
    )
    )
  nil
  )
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; listSearch() finds the index of value in a list.
;; Receive: aList, a list of values and aValue, an integer  
;; PRE: aList is a list 
;;      values in aList can be compared using =.
;; Return: the index value in aList.         
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn listSearch [aList aValue count]
  (if (list? aList)
    (if (empty? aList) -1
      (if (= (first aList) aValue) count
        (listSearch (rest aList) aValue (+ count 1))
      )
    )
  nil
  )
)
    

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; listMax2() finds the maximum value in a list.
;; Receive: aList, a list of values.    
;; PRE: aList is a list 
;;      values in aList can be compared using >.
;; Return: the maximum value in aList.         
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn listMax2 [aList]
  (if (list? aList) 
    (if (empty? aList)
      nil
        (apply max aList)      
    )  
  ) 
)

;; max.clj tests a function to search a list for its maximum value.
;;
;; Output: three lists, and 
;;          the results of calling a maxList() function on them.
;;
;; Usage: clojure -m max
;;
;; Begun by: Dr. Adams, CS 214 at Calvin College.
;; Completed by:Sinai Park (sp46)
;; Date:April 17 2020
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns max)

(load "listOps")                      ; load module

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function -main tests function listMax(). 
;; Output: the results of testing listMax() on various lists.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn -main []
  (let
    [ 
      list1 '(99 88 77 66 55)        ; max is first value
      list2 (list 55 66 77 88 99)    ; max is last value
      list3 (list 55 77 99 88 66)    ; max is middle value
      list4 (list 55 66 77 88 00)     ; 99 is not in list
      emptyList '()                  ; list is empty
    ]

    (println)
    (println "list1: " list1)        ; print list1,
    (println "list2: " list2)        ;   list2,
    (println "list3: " list3)        ;   list3,
    (println "empty: " emptyList)    ;   list3,
    (println)                        ;   and their maxima
    (println "The max value in list1 is: " (listMax list1))
    (println "The max value in list2 is: " (listMax list2))
    (println "The max value in list3 is: " (listMax list3))
    (println)
    (println "The max of an empty list is: " (listMax emptyList))
    (println)

    (println "The max value in list1 is: " (listMax2 list1))
    (println "The max value in list2 is: " (listMax2 list2))
    (println "The max value in list3 is: " (listMax2 list3))
    (println)
    (println "The max of an empty list is: " (listMax2 emptyList))
    (println)
    (println "The index of 99 in list1 is: " (listSearch list1 99 0))
    (println "The index of 99 in list2 is: " (listSearch list2 99 0))
    (println "The index of 99 in list3 is: " (listSearch list3 99 0))
    (println "The index of 99 in list4 is: " (listSearch list4 99 0))
  )
)

]0;sp46@gold06: ~/214/projects/09/clojure[01;32msp46@gold06[00m:[01;34m~/214/projects/09/clojure[00m$ exit

Script done on 2020-04-24 02:44:26-0400
